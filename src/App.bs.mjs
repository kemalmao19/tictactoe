// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Board from "./components/Board/Board.bs.mjs";
import * as Curry from "rescript/lib/es6/curry.js";
import * as Reset from "./components/Reset/Reset.bs.mjs";
import * as State from "./components/State/State.bs.mjs";
import * as React from "react";
import * as Header from "./components/Header/Header.bs.mjs";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as JsxRuntime from "react/jsx-runtime";

function App(props) {
  var match = React.useState(function () {
        return State.state;
      });
  var setCell = match[1];
  var cell = match[0];
  var match$1 = React.useState(function () {
        return State.crossTurn;
      });
  var setTurn = match$1[1];
  var turn = match$1[0];
  var handleClick = function (index) {
    if (cell[index] !== "") {
      return ;
    }
    var newCell = cell.slice(0);
    newCell[index] = turn;
    Curry._1(setCell, (function (param) {
            return newCell;
          }));
    if (turn === State.crossTurn) {
      return Curry._1(setTurn, (function (param) {
                    return State.circleTurn;
                  }));
    } else {
      return Curry._1(setTurn, (function (param) {
                    return State.crossTurn;
                  }));
    }
  };
  React.useEffect((function () {
          return (function (param) {
                    for(var i = 0 ,i_finish = State.winningCombination.length; i < i_finish; ++i){
                      var combo = State.winningCombination[i];
                      var cellCombo = Belt_Option.getWithDefault(combo, []);
                      if (cellCombo.length !== 3) {
                        throw {
                              RE_EXN_ID: "Match_failure",
                              _1: [
                                "App.res",
                                27,
                                10
                              ],
                              Error: new Error()
                            };
                      }
                      
                    }
                  });
        }), [cell]);
  return JsxRuntime.jsxs("div", {
              children: [
                JsxRuntime.jsx(Header.make, {
                      turn: turn
                    }),
                JsxRuntime.jsx(Board.make, {
                      cell: cell,
                      turn: turn,
                      cellClick: handleClick
                    }),
                JsxRuntime.jsx(Reset.make, {
                      setBoard: setCell
                    })
              ],
              className: "bg-slate-900 flex flex-col items-center py-10"
            });
}

var make = App;

export {
  make ,
}
/* Board Not a pure module */
